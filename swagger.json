{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Gruppe 1 - Webarchitetkur & Anwendung",
    "description": "Erstellt von Pablo Stockhausen",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:8080",
  "basePath": "/api/v1",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    },
    {
      "name": "Categories",
      "description": "API for categories in the system"
    },
    {
      "name": "Topics",
      "description": "API for topics in the system"
    },
    {
      "name": "Posts",
      "description": "API for posts in the system"
    }
  ],
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
      },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete All users [NOT IMPLEMENTED]",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "All Users deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
       }
    },
    "/users/{userId}": {
      "parameters": [
        {
          "name": "userId",
          "in": "path",
          "required": true,
          "description": "ID of user that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user with given ID",
        "responses": {
          "200": {
            "description": "User is found",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user with given ID",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "User is deleted",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      },
      "put": {
        "summary": "Update user with give ID [NOT IMPLEMENTED]",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User with new values of properties",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User is updated",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Create new Category in system",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "description": "Category that we want to create",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New Category is created",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Categories"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete All categories [NOT IMPLEMENTED]",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "All Categories deleted",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "parameters": [
        {
          "name": "categoryId",
          "in": "path",
          "required": true,
          "description": "ID of category that we want to find",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category with given ID [NOT IMPLEMENTED]",
        "responses": {
          "200": {
            "description": "Category is found",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete category with given ID [NOT IMPLEMENTED]",
        "tags": [
          "Categories"
        ],
        "responses": {
          "200": {
            "description": "Category is deleted",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      },
      "put": {
        "summary": "Update category with give ID [NOT IMPLEMENTED]",
        "tags": [
          "Categories"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "description": "Category with new values of properties",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category is updated",
            "schema": {
              "$ref": "#/definitions/Category"
            }
          }
        }
      }
    },
    "/topics": {
      "post": {
        "tags": [
          "Topics"
        ],
        "description": "Create new Topic in system",
        "parameters": [
          {
            "name": "topic",
            "in": "body",
            "description": "Topic that we want to create",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New Topic is created",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      },
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get all topics in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Topics"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete All topics [NOT IMPLEMENTED]",
        "tags": [
          "Topics"
        ],
        "responses": {
          "200": {
            "description": "All Topics deleted",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      }
    },
    "/topics/findOne/{topicId}": {
      "parameters": [
        {
          "name": "topicId",
          "in": "path",
          "required": true,
          "description": "ID of topic that we want to find [NOT IMPLEMENTED]",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Topics"
        ],
        "summary": "Get topic with given ID",
        "responses": {
          "200": {
            "description": "Topic is found",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete topic with given ID [NOT IMPLEMENTED]",
        "tags": [
          "Topics"
        ],
        "responses": {
          "200": {
            "description": "Topic is deleted",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      },
      "put": {
        "summary": "Update topic with give ID",
        "tags": [
          "Topics"
        ],
        "parameters": [
          {
            "name": "topic",
            "in": "body",
            "description": "Topic with new values of properties",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Topic is updated",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      }
    },
    "/posts/register": {
      "post": {
        "tags": [
          "Posts"
        ],
        "description": "Create new Post in system",
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Post that we want to create",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New Post is created",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    },
    "/posts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all posts in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete All posts [NOT IMPLEMENTED]",
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "description": "All Posts deleted",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    },
    "/posts/all/{topicId}": {
      "parameters": [
        {
          "name": "topicId",
          "in": "path",
          "required": true,
          "description": "ID of topic that we want to use to find all posts that are connected with the respective topic",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get all posts in system with specific topic ID",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Posts"
            }
          }
        }
      }
    },
    "/posts/{postId}": {
      "parameters": [
        {
          "name": "postId",
          "in": "path",
          "required": true,
          "description": "ID of post that we want to find [NOT IMPLEMENTED]",
          "type": "string"
        }
      ],
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Get post with given ID",
        "responses": {
          "200": {
            "description": "Post is found",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      },
      "delete": {
        "summary": "Delete post with given ID [NOT IMPLEMENTED]",
        "tags": [
          "Posts"
        ],
        "responses": {
          "200": {
            "description": "Post is deleted",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      },
      "put": {
        "summary": "Update post with give ID",
        "tags": [
          "Posts"
        ],
        "parameters": [
          {
            "name": "post",
            "in": "body",
            "description": "Post with new values of properties",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post is updated",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "User": {
      "required": [
        "user_id",
        "user_email"
      ],
      "properties": {
        "user_id": {
          "type": "number",
          "uniqueItems": true
        },
        "user_name": {
          "type": "string",
          "uniqueItems": true
        },
        "user_pass": {
          "type": "string"
        },
        "user_email": {
          "type": "string"
        },
        "user_date": {
          "type": "string"
        },
        "user_level": {
          "type": "number"
        },
        "user_role": {
          "type": "string"
        },
        "user_permission": {
          "type": "string"
        }
      }
    },
    "Category": {
      "required": [
        "cat_id",
        "cat_name"
      ],
      "properties": {
        "cat_id": {
          "type": "number",
          "uniqueItems": true
        },
        "cat_name": {
          "type": "string",
          "uniqueItems": true
        },
        "cat_description": {
          "type": "string"
        }
      }
    },
    "Topic": {
      "required": [
        "topic_id",
        "topic_cat",
        "topic_by"
      ],
      "properties": {
        "topic_id": {
          "type": "number",
          "uniqueItems": true
        },
        "topic_subject": {
          "type": "string"
        },
        "topic_date": {
          "type": "string"
        },
        "topic_cat": {
          "type": "number",
          "uniqueItems": true
        },
        "topic_by": {
          "type": "number",
          "uniqueItems": true
        },
        "topic_content": {
          "type": "string"
        },
        "topic_views": {
          "type": "number"
        }
      }
    },
    "Post": {
      "required": [
        "post_id",
        "post_topic",
        "post_by"
      ],
      "properties": {
        "post_id": {
          "type": "number",
          "uniqueItems": true
        },
        "post_content": {
          "type": "string"
        },
        "post_date": {
          "type": "string"
        },
        "post_topic": {
          "type": "number",
          "uniqueItems": true
        },
        "post_by": {
          "type": "number",
          "uniqueItems": true
        }
      }
    },
    "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    },
    "Categories": {
      "type": "array",
      "$ref": "#/definitions/Category"
    },
    "Topics": {
      "type": "array",
      "$ref": "#/definitions/Topic"
    },
    "Posts": {
      "type": "array",
      "$ref": "#/definitions/Post"
    }
  }
}